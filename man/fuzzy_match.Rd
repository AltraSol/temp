% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_match.R
\name{fuzzy_match}
\alias{fuzzy_match}
\title{Fuzzy match two character vectors}
\usage{
fuzzy_match(swap_out, swap_in)
}
\arguments{
\item{swap_out}{A vector of characters.}

\item{swap_in}{A vector of characters >= \code{length(swap_out)}.}
}
\value{
A character vector equal in length to \code{swap_out}.
}
\description{
Substitutes all elements of \code{swap_out} with one from \code{swap_in}. All
perfect matches are immediately substituted, with the order of proceeding
matches determined by choosing the next element found to minimize the total
string distance computed by comparing the remainder of \code{swap_out} and \code{swap_in}.
}
\details{
When two or more elements of \code{swap_out} have equivalent total string distances,
the first element will proceed. A comparison of this element and
the remainder of \code{swap_in} is then made to assign the final match.

Implements the running cosine matching algorithm from \code{\link[stringdist:afind]{stringdist::afind()}}
with \code{q = min(nchar(swap_out))} to choose the next element to match, and
\code{q = min(nchar(swap_in))} to choose the best match in \code{swap_in}. After each
match is made, the match is removed from swap_out and swap_in (often resulting in
\code{q} also changing for the next comparison).
}
\examples{
messy_words <- c(
  "ID #",               # ID
  "Barcode",            # Code
  "Product\nName",      # Name
  "Day of \n the week", # Day
  "Month (MMM) ",       # Month
  "Amount $"            # Amount
)

clean_words <- c(
  "Amount",
  "Month ",
  "Day",
  "Name",
  "Code",
  "ID"
)

swapped_words <- fuzzy_match(swap_out = messy_words,
                             swap_in = clean_words)
swapped_words # order preserved, best matches substituted


# categorize and handle spelling mistakes from OCR text
color_phrases <- c(
  "The sunrise was 'yellovv'",
  "There were 'purp/e' flowers",
  "The fruit was 'orang e'"
)

# swap_in can be any length >= swap_out
colors_list <- c(
  "Red",
  "Blue",
  "Green",
  "Yellow",
  "Violet",
  "Purple",
  "Orange"
)

# a notice will be shown where there is a potential incompatible fuzzy match
colors_mentioned <- fuzzy_match(color_phrases, colors_list)

writeLines(paste0(
  "The colors mentioned were: ",
  paste0(colors_mentioned, collapse = ", ")
))
}
